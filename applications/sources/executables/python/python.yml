isDefault: true
monitors:
  - standard_output
results:
  - file_content
  - 'workflow:pyml_predict'
flavors:
  hello_world:
    isDefault: true
    input:
      - name: script.py
        templateName: hello_world.py
      - name: requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  espresso_xml_get_qpt_irr:
    input:
      - name: espresso_xml_get_qpt_irr.py
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  espresso_extract_kpoints:
    input:
      - name: espresso_extract_kpoints.py
      - name: requirements.txt
        templateName: requirements_empty.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'generic:post_processing:plot:matplotlib':
    input:
      - name: plot.py
        templateName: matplotlib_basic.py
      - name: requirements.txt
        templateName: processing_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'generic:processing:find_extrema:scipy':
    input:
      - name: find_extrema.py
        templateName: find_extrema.py
      - name: requirements.txt
        templateName: processing_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:setup_variables_packages':
    input:
      - name: settings.py
        templateName: pyml_settings.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:custom':
    input:
      - name: pyml_custom.py
        templateName: pyml_custom.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:data_input:read_csv:pandas':
    input:
      - name: data_input_read_csv_pandas.py
        templateName: data_input_read_csv_pandas.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:data_input:train_test_split:sklearn':
    input:
      - name: data_input_train_test_split_sklearn.py
        templateName: data_input_train_test_split_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:pre_processing:min_max_scaler:sklearn':
    input:
      - name: pre_processing_min_max_sklearn.py
        templateName: pre_processing_min_max_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:pre_processing:remove_duplicates:pandas':
    input:
      - name: pre_processing_remove_duplicates_pandas.py
        templateName: pre_processing_remove_duplicates_pandas.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:pre_processing:remove_missing:pandas':
    input:
      - name: pre_processing_remove_missing_pandas.py
        templateName: pre_processing_remove_missing_pandas.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:pre_processing:standardization:sklearn':
    input:
      - name: pre_processing_standardization_sklearn.py
        templateName: pre_processing_standardization_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:adaboosted_trees_regression:sklearn':
    input:
      - name: model_adaboosted_trees_regression_sklearn.py
        templateName: model_adaboosted_trees_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    monitors:
      - standard_output
    results:
      - 'workflow:pyml_predict'
    applicationName: python
    executableName: python

  'pyml:model:bagged_trees_regression:sklearn':
    input:
      - name: model_bagged_trees_regression_sklearn.py
        templateName: model_bagged_trees_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:gradboosted_trees_regression:sklearn':
    input:
      - name: model_gradboosted_trees_regression_sklearn.py
        templateName: model_gradboosted_trees_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:extreme_gradboosted_trees_regression:sklearn':
    input:
      - name: model_extreme_gradboosted_trees_regression_sklearn.py
        templateName: model_extreme_gradboosted_trees_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:k_means_clustering:sklearn':
    input:
      - name: model_k_means_clustering_sklearn.py
        templateName: model_k_means_clustering_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:kernel_ridge_regression:sklearn':
    input:
      - name: model_kernel_ridge_regression_sklearn.py
        templateName: model_kernel_ridge_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:lasso_regression:sklearn':
    input:
      - name: model_lasso_regression_sklearn.py
        templateName: model_lasso_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:multilayer_perceptron:sklearn':
    input:
      - name: model_mlp_sklearn.py
        templateName: model_mlp_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:random_forest_classification:sklearn':
    input:
      - name: model_random_forest_classification_sklearn.py
        templateName: model_random_forest_classification_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:gradboosted_trees_classification:sklearn':
    input:
      - name: model_gradboosted_trees_classification_sklearn.py
        templateName: model_gradboosted_trees_classification_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:extreme_gradboosted_trees_classification:sklearn':
    input:
      - name: model_extreme_gradboosted_trees_classification_sklearn.py
        templateName: model_extreme_gradboosted_trees_classification_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:random_forest_regression:sklearn':
    input:
      - name: model_random_forest_regression_sklearn.py
        templateName: model_random_forest_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:model:ridge_regression:sklearn':
    input:
      - name: model_ridge_regression_sklearn.py
        templateName: model_ridge_regression_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - 'workflow:pyml_predict'
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:post_processing:parity_plot:matplotlib':
    input:
      - name: post_processing_parity_plot_matplotlib.py
        templateName: post_processing_parity_plot_matplotlib.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - file_content
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:post_processing:pca_2d_clusters:matplotlib':
    input:
      - name: post_processing_pca_2d_clusters_matplotlib.py
        templateName: post_processing_pca_2d_clusters_matplotlib.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - file_content
    monitors:
      - standard_output
    applicationName: python
    executableName: python

  'pyml:post_processing:roc_curve:sklearn':
    input:
      - name: post_processing_roc_curve_sklearn.py
        templateName: post_processing_roc_curve_sklearn.py
      - name: requirements.txt
        templateName: pyml_requirements.txt
    results:
      - file_content
    monitors:
      - standard_output
    applicationName: python
    executableName: python
