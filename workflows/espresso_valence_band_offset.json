{
  "name": "Valence Band Offset (2D)",
  "properties": [],
  "subworkflows": [
    {
      "application": {
        "name": "espresso",
        "version": "6.3"
      },
      "config": {
        "isMultiMaterial": true
      },
      "method": {
        "name": "PseudopotentialMethod"
      },
      "model": {
        "name": "DFTModel"
      },
      "name": "Band Structure + average ESP",
      "units": [
        {
          "config": {
            "name": "Set Material Index",
            "operand": "MATERIAL_INDEX",
            "value": 0
          },
          "type": "assignment"
        },
        {
          "config": {
            "execName": "pw.x",
            "flavorName": "pw_scf",
            "name": "pw_scf"
          },
          "type": "executionBuilder"
        },
        {
          "attributes": {
            "results": [
              {
                "name": "band_gaps"
              }
            ]
          },
          "config": {
            "execName": "pw.x",
            "flavorName": "pw_bands",
            "flowchartId": "pw-bands-calculate-band-gap",
            "name": "pw_bands"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "band_gaps",
                "scope": "pw-bands-calculate-band-gap"
              }
            ],
            "name": "Select indirect band gap",
            "operand": "BAND_GAP_INDIRECT",
            "value": "[bandgap for bandgap in band_gaps['values'] if bandgap['type'] == 'indirect'][0]"
          },
          "type": "assignment"
        },
        {
          "config": {
            "name": "Set Valence Band Maximum",
            "operand": "VBM",
            "value": "BAND_GAP_INDIRECT['eigenvalueValence']"
          },
          "type": "assignment"
        },
        {
          "config": {
            "execName": "bands.x",
            "flavorName": "bands",
            "name": "bands"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "execName": "pp.x",
            "flavorName": "pp_electrostatic_potential",
            "name": "Electrostatic Potential (ESP)"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "execName": "average.x",
            "flavorName": "average_potential",
            "flowchartId": "average-electrostatic-potential",
            "name": "average ESP"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "average_potential_profile",
                "scope": "average-electrostatic-potential"
              }
            ],
            "name": "Set Macroscopically Averaged ESP Data",
            "operand": "array_from_context",
            "value": "average_potential_profile['yDataSeries'][1]"
          },
          "type": "assignment"
        }
      ]
    },
    {
      "application": {
        "name": "python",
        "version": "3.10.13"
      },
      "method": {
        "name": "UnknownMethod"
      },
      "model": {
        "name": "UnknownModel"
      },
      "name": "Find ESP Value",
      "units": [
        {
          "config": {
            "execName": "python",
            "flavorName": "generic:processing:find_extrema:scipy",
            "flowchartId": "python-find-extrema",
            "name": "Find Extrema"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "STDOUT",
                "scope": "python-find-extrema"
              }
            ],
            "name": "Set Average ESP Value",
            "operand": "AVG_ESP",
            "value": "json.loads(STDOUT)['minima']"
          },
          "type": "assignment"
        }
      ]
    },
    {
      "application": {
        "name": "espresso",
        "version": "6.3"
      },
      "config": {
        "isMultiMaterial": true
      },
      "method": {
        "name": "PseudopotentialMethod"
      },
      "model": {
        "name": "DFTModel"
      },
      "name": "Band Structure + average ESP",
      "units": [
        {
          "config": {
            "name": "Set Material Index",
            "operand": "MATERIAL_INDEX",
            "value": 0
          },
          "type": "assignment"
        },
        {
          "config": {
            "execName": "pw.x",
            "flavorName": "pw_scf",
            "name": "pw_scf"
          },
          "type": "executionBuilder"
        },
        {
          "attributes": {
            "results": [
              {
                "name": "band_gaps"
              }
            ]
          },
          "config": {
            "execName": "pw.x",
            "flavorName": "pw_bands",
            "flowchartId": "pw-bands-calculate-band-gap",
            "name": "pw_bands"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "band_gaps",
                "scope": "pw-bands-calculate-band-gap"
              }
            ],
            "name": "Select indirect band gap",
            "operand": "BAND_GAP_INDIRECT",
            "value": "[bandgap for bandgap in band_gaps['values'] if bandgap['type'] == 'indirect'][0]"
          },
          "type": "assignment"
        },
        {
          "config": {
            "name": "Set Valence Band Maximum",
            "operand": "VBM",
            "value": "BAND_GAP_INDIRECT['eigenvalueValence']"
          },
          "type": "assignment"
        },
        {
          "config": {
            "execName": "bands.x",
            "flavorName": "bands",
            "name": "bands"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "execName": "pp.x",
            "flavorName": "pp_electrostatic_potential",
            "name": "Electrostatic Potential (ESP)"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "execName": "average.x",
            "flavorName": "average_potential",
            "flowchartId": "average-electrostatic-potential",
            "name": "average ESP"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "average_potential_profile",
                "scope": "average-electrostatic-potential"
              }
            ],
            "name": "Set Macroscopically Averaged ESP Data",
            "operand": "array_from_context",
            "value": "average_potential_profile['yDataSeries'][1]"
          },
          "type": "assignment"
        }
      ]
    },
    {
      "application": {
        "name": "python",
        "version": "3.10.13"
      },
      "method": {
        "name": "UnknownMethod"
      },
      "model": {
        "name": "UnknownModel"
      },
      "name": "Find ESP Value",
      "units": [
        {
          "config": {
            "execName": "python",
            "flavorName": "generic:processing:find_extrema:scipy",
            "flowchartId": "python-find-extrema",
            "name": "Find Extrema"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "STDOUT",
                "scope": "python-find-extrema"
              }
            ],
            "name": "Set Average ESP Value",
            "operand": "AVG_ESP",
            "value": "json.loads(STDOUT)['minima']"
          },
          "type": "assignment"
        }
      ]
    },
    {
      "application": {
        "name": "espresso",
        "version": "6.3"
      },
      "config": {
        "isMultiMaterial": true
      },
      "method": {
        "name": "PseudopotentialMethod"
      },
      "model": {
        "name": "DFTModel"
      },
      "name": "Band Structure + average ESP",
      "units": [
        {
          "config": {
            "name": "Set Material Index",
            "operand": "MATERIAL_INDEX",
            "value": 0
          },
          "type": "assignment"
        },
        {
          "config": {
            "execName": "pw.x",
            "flavorName": "pw_scf",
            "name": "pw_scf"
          },
          "type": "executionBuilder"
        },
        {
          "attributes": {
            "results": [
              {
                "name": "band_gaps"
              }
            ]
          },
          "config": {
            "execName": "pw.x",
            "flavorName": "pw_bands",
            "flowchartId": "pw-bands-calculate-band-gap",
            "name": "pw_bands"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "band_gaps",
                "scope": "pw-bands-calculate-band-gap"
              }
            ],
            "name": "Select indirect band gap",
            "operand": "BAND_GAP_INDIRECT",
            "value": "[bandgap for bandgap in band_gaps['values'] if bandgap['type'] == 'indirect'][0]"
          },
          "type": "assignment"
        },
        {
          "config": {
            "name": "Set Valence Band Maximum",
            "operand": "VBM",
            "value": "BAND_GAP_INDIRECT['eigenvalueValence']"
          },
          "type": "assignment"
        },
        {
          "config": {
            "execName": "bands.x",
            "flavorName": "bands",
            "name": "bands"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "execName": "pp.x",
            "flavorName": "pp_electrostatic_potential",
            "name": "Electrostatic Potential (ESP)"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "execName": "average.x",
            "flavorName": "average_potential",
            "flowchartId": "average-electrostatic-potential",
            "name": "average ESP"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "average_potential_profile",
                "scope": "average-electrostatic-potential"
              }
            ],
            "name": "Set Macroscopically Averaged ESP Data",
            "operand": "array_from_context",
            "value": "average_potential_profile['yDataSeries'][1]"
          },
          "type": "assignment"
        }
      ]
    },
    {
      "application": {
        "name": "python",
        "version": "3.10.13"
      },
      "method": {
        "name": "UnknownMethod"
      },
      "model": {
        "name": "UnknownModel"
      },
      "name": "Find ESP Value",
      "units": [
        {
          "config": {
            "execName": "python",
            "flavorName": "generic:processing:find_extrema:scipy",
            "flowchartId": "python-find-extrema",
            "name": "Find Extrema"
          },
          "type": "executionBuilder"
        },
        {
          "config": {
            "input": [
              {
                "name": "STDOUT",
                "scope": "python-find-extrema"
              }
            ],
            "name": "Set Average ESP Value",
            "operand": "AVG_ESP",
            "value": "json.loads(STDOUT)['minima']"
          },
          "type": "assignment"
        }
      ]
    },
    {
      "application": {
        "name": "python",
        "version": "3.10.13"
      },
      "method": {
        "name": "UnknownMethod"
      },
      "model": {
        "name": "UnknownModel"
      },
      "name": "Calculate VBO",
      "units": [
        {
          "config": {
            "name": "Difference of valence band maxima",
            "operand": "VBM_DIFF",
            "value": "VBM_LEFT - VBM_RIGHT"
          },
          "type": "assignment"
        },
        {
          "config": {
            "name": "Difference of macroscopically averaged ESP in bulk",
            "operand": "AVG_ESP_DIFF",
            "value": "AVG_ESP_LEFT[0] - AVG_ESP_RIGHT[0]"
          },
          "type": "assignment"
        },
        {
          "config": {
            "name": "Lineup of macroscopically averaged ESP in interface",
            "operand": "ESP_LINEUP",
            "value": "np.abs(AVG_ESP_INTERFACE[0] - AVG_ESP_INTERFACE[1])"
          },
          "type": "assignment"
        },
        {
          "config": {
            "name": "Valence Band Offset",
            "operand": "VALENCE_BAND_OFFSET",
            "results": [
              {
                "name": "valence_band_offset"
              }
            ],
            "value": "abs(VBM_DIFF - AVG_ESP_DIFF + (np.sign(AVG_ESP_DIFF) * ESP_LINEUP))"
          },
          "type": "assignment"
        }
      ]
    }
  ],
  "units": [
    {
      "head": true,
      "name": "Band Structure + average ESP",
      "type": "subworkflow"
    },
    {
      "name": "Find ESP Value",
      "type": "subworkflow"
    },
    {
      "name": "Band Structure + average ESP",
      "type": "subworkflow"
    },
    {
      "name": "Find ESP Value",
      "type": "subworkflow"
    },
    {
      "name": "Band Structure + average ESP",
      "type": "subworkflow"
    },
    {
      "name": "Find ESP Value",
      "type": "subworkflow"
    },
    {
      "name": "Calculate VBO",
      "type": "subworkflow"
    }
  ]
}
